{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\r\n\r\nmetadata = {\r\n    systemName: \"MSExcelTodoJSSP\",\r\n    displayName: \"Microsoft Excel and To Do\",\r\n    description: \"A connector for Microsoft Excel and To Do\"\r\n};\r\n\r\n// Constants\r\nconst baseUriEndpoint = \"https://graph.microsoft.com/v1.0\";\r\nconst baseUriEndpointBeta = \"https://graph.microsoft.com/beta\";\r\n\r\n//\r\n// Objects\r\nconst Drive = \"drive\";\r\n\r\n//\r\n//Drive\r\nconst FileId = \"fileId\";\r\nconst FileWebUrl = \"fileWebUrl\";\r\nconst FileSize = \"fileSize\";\r\nconst FileName = \"fileName\";\r\nconst FileCreated = \"fileCreatedDate\";\r\nconst FileCreatedBy = \"fileCreatedBy\";\r\nconst FileCreatedByEmail = \"fileCreatedByEmail\";\r\nconst FileMimeType = \"fileMimeType\";\r\nconst FilePath = \"filePath\";\r\nconst FolderName = \"folderName\";\r\nconst FolderPath = \"folderPath\";\r\n\r\nconst FileSearch = \"searchFile\";\r\nconst CreateFolder = \"createFolder\";\r\n\r\n//OnDescribe\r\nondescribe = function () {\r\n    postSchema({\r\n\r\n        objects: {\r\n            [Drive]: {\r\n                displayName: \"Drive\",\r\n                description: \"Drive\",\r\n                properties: {\r\n                    [FileId]: {\r\n                        displayName: \"File ID\",\r\n                        description: \"File ID\",\r\n                        type: \"string\"\r\n                    },\r\n                    [FileWebUrl]: {\r\n                        displayName: \"File Web URL\",\r\n                        description: \"File Web URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [FileSize]: {\r\n                        displayName: \"File Size\",\r\n                        description: \"File Size\",\r\n                        type: \"number\"\r\n                    },\r\n                    [FileName]: {\r\n                        displayName: \"File Name\",\r\n                        description: \"File Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [FileCreated]: {\r\n                        displayName: \"File Created Date\",\r\n                        description: \"File Created Date\",\r\n                        type: \"dateTime\"\r\n                    },\r\n                    [FileCreatedBy]: {\r\n                        displayName: \"File Created By\",\r\n                        description: \"File Created By\",\r\n                        type: \"string\"\r\n                    },\r\n                    [FileCreatedByEmail]: {\r\n                        displayName: \"File Created By Email\",\r\n                        description: \"File Created By Email\",\r\n                        type: \"string\"\r\n                    },\r\n                    [FileMimeType]: {\r\n                        displayName: \"File Mime Type\",\r\n                        description: \"File Mime Type\",\r\n                        type: \"string\"\r\n                    },\r\n                    [FilePath]: {\r\n                        displayName: \"File Path\",\r\n                        description: \"File Path\",\r\n                        type: \"string\"\r\n                    },\r\n                    [FolderName]: {\r\n                        displayName: \"Folder Name\",\r\n                        description: \"Folder Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [FolderPath]: {\r\n                        displayName: \"Folder Path\",\r\n                        description: \"Folder Path\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [FileSearch]: {\r\n                        displayName: \"Search for a file in my OneDrive\",\r\n                        type: \"read\",\r\n                        inputs: [FileName, FilePath],\r\n                        requiredInputs: [FileName],\r\n                        outputs: [FileId, FileWebUrl, FileSize, FileName, FileCreated, FileCreatedBy, FileCreatedByEmail, FileMimeType]\r\n                    },\r\n                    [CreateFolder]: {\r\n                        displayName: \"Create Folder\",\r\n                        type: \"execute\",\r\n                        inputs: [FolderName, FolderPath],\r\n                        requiredInputs: [FolderName],\r\n                        outputs: []\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n}\r\n\r\n// OnExecute\r\nonexecute = function ({ objectName, methodName, parameters, properties }) {\r\n    switch (objectName) {\r\n        case Drive:\r\n            onexecuteDrive(methodName, parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecuteDrive(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName) {\r\n        case FileSearch:\r\n            onexecuteSearchFile(parameters, properties);\r\n            break;\r\n        case CreateFolder:\r\n            onexecuteCreateFolder(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction ExecuteRequest(url: string, data: string, requestType: string, cb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n        console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n        if (xhr.readyState !== 4)\r\n            return;\r\n        if (xhr.status == 201) {\r\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n            var obj = JSON.parse(xhr.responseText);\r\n            if (typeof cb === 'function')\r\n                cb(obj);\r\n        }\r\n        else if (xhr.status == 204) {\r\n            if (typeof cb === 'function')\r\n                cb(xhr.responseText);\r\n        }\r\n        else if (xhr.status == 200) {\r\n            var obj = JSON.parse(xhr.responseText);\r\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n            //console.log(\"ExecuteRequest cb type of: \" + (typeof cb).toString());\r\n            if (typeof cb === 'function')\r\n                cb(obj);\r\n        }\r\n        else if (xhr.status == 202) {\r\n            if (typeof cb === 'function')\r\n                cb(null);\r\n        }\r\n        else if (xhr.status == 400) {\r\n            // This is a bad request, return error to UI\r\n            var obj = JSON.parse(xhr.responseText);\r\n            throw new Error(obj.error.code + \": \" + obj.error.message);\r\n        }\r\n        else if (xhr.status == 404) {\r\n            var obj = JSON.parse(xhr.responseText);\r\n            // This is to supress an error that happens with team archive/unarchive\r\n            var errorMessage = obj.error.message;\r\n            if (errorMessage.startswith == \"No Team found with Group id\") {\r\n                // do nothing - supress error\r\n            }\r\n            else {\r\n                throw new Error(obj.error.code + \": \" + obj.error.message);\r\n            }\r\n            //console.log(\"MSTeamsConnector ExecuteRequest: Failed with 404 error.\");\r\n            //throw new Error(obj.error.code + \" error: \" + obj.error.message);\r\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\r\n        }\r\n        else {\r\n            postResult({\r\n                //TeamIsSuccessful: false\r\n            });\r\n            var obj = JSON.parse(xhr.responseText);\r\n            throw new Error(obj.error.code + \": \" + obj.error.message);\r\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\r\n\r\n        }\r\n    };\r\n    console.log(\"MSTeamsConnector ExecuteRequest: \" + url);\r\n    xhr.open(requestType.toUpperCase(), url);\r\n    // Authentication Header\r\n    xhr.withCredentials = true;\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    if (requestType.toUpperCase() == \"PUT\" || requestType.toUpperCase() == \"POST\" || requestType.toUpperCase() == \"PATCH\") {\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    }\r\n    xhr.send(data);\r\n}\r\n\r\n\r\nfunction onexecuteSearchFile(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetDriveFile(parameters, properties, function (a) {\r\n        var resultObj = {\r\n            [FileId]: \"\",\r\n            [FileWebUrl]: \"\",\r\n            [FileSize]: 0,\r\n            [FileName]: \"\",\r\n            [FileCreated]: null,\r\n            [FileCreatedBy]: \"\",\r\n            [FileCreatedByEmail]: \"\",\r\n            [FileMimeType]: \"\"\r\n        };\r\n\r\n        if (a.value.length > 0) {\r\n            resultObj[FileId] = a.value[0].id;\r\n            resultObj[FileWebUrl] = a.value[0].webUrl;\r\n            resultObj[FileSize] = a.value[0].size;\r\n            resultObj[FileName] = a.value[0].name;\r\n            resultObj[FileCreated] = Date.parse(a.value[0].createdDateTime);\r\n            resultObj[FileCreatedBy] = a.value[0].createdBy.user.displayName;\r\n            resultObj[FileCreatedByEmail] = a.value[0].createdBy.user.email;\r\n            resultObj[FileMimeType] = a.value[0].file.mimeType;\r\n        }\r\n\r\n        postResult(resultObj);\r\n    });\r\n}\r\n\r\nfunction GetDriveFile(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let fileName = properties[FileName];\r\n    let filePath = properties[FilePath];\r\n    if (!(typeof fileName === \"string\")) throw new Error(\"properties[FileName] is not of type string\");\r\n\r\n    var url;\r\n    if ((typeof filePath === \"string\") && (filePath != \"\")) {\r\n        url = baseUriEndpoint + `/me/drive/root:/${filePath}:/search(q='${fileName}')`;\r\n    }\r\n    else {\r\n        url = baseUriEndpoint + `/me/drive/root/search(q='${fileName}')`;\r\n    }\r\n\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteCreateFolder(parameters: SingleRecord, properties: SingleRecord) {\r\n    //CreateDriveFolder(parameters, properties, function () {\r\n        postResult({});\r\n    //});\r\n}\r\n\r\nfunction CreateDriveFolder(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let folderName = properties[FolderName];\r\n    let folderPath = properties[FolderPath];\r\n    if (!(typeof folderName === \"string\")) throw new Error(\"properties[FolderName] is not of type string\");\r\n\r\n    var url;\r\n    if ((typeof folderPath === \"string\") && (folderPath != \"\")) {\r\n        url = baseUriEndpoint + `/me/drive/root:/${folderPath}:/children')`;\r\n    }\r\n    else {\r\n        url = baseUriEndpoint + `/me/drive/root/children)`;\r\n    }\r\n\r\n    var data = {\r\n        \"name\": folderName,\r\n        \"folder\": {},\r\n        \"@microsoft.graph.conflictBehavior\": \"replace\"\r\n    };\r\n\r\n    ExecuteRequest(url, JSON.stringify(data), \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb();\r\n    });\r\n}"],"names":["metadata","systemName","displayName","description","ondescribe","postSchema","objects","properties","type","methods","inputs","requiredInputs","outputs","onexecute","objectName","methodName","parameters","cb","fileName","filePath","Error","url","data","requestType","xhr","XMLHttpRequest","onreadystatechange","console","log","status","responseText","readyState","obj","JSON","parse","error","code","message","postResult","startswith","open","toUpperCase","withCredentials","setRequestHeader","send","ExecuteRequest","GetDriveFile","a","resultObj","value","length","id","webUrl","size","name","Date","createdDateTime","createdBy","user","email","file","mimeType","onexecuteSearchFile","onexecuteDrive"],"mappings":"YAEAA,SAAW,CACPC,WAAY,kBACZC,YAAa,4BACbC,YAAa,6CA6BjBC,WAAa,WACTC,WAAW,CAEPC,QAAS,OACI,CACLJ,YAAa,QACbC,YAAa,QACbI,WAAY,QACE,CACNL,YAAa,UACbC,YAAa,UACbK,KAAM,qBAEI,CACVN,YAAa,eACbC,YAAa,eACbK,KAAM,mBAEE,CACRN,YAAa,YACbC,YAAa,YACbK,KAAM,mBAEE,CACRN,YAAa,YACbC,YAAa,YACbK,KAAM,0BAEK,CACXN,YAAa,oBACbC,YAAa,oBACbK,KAAM,0BAEO,CACbN,YAAa,kBACbC,YAAa,kBACbK,KAAM,6BAEY,CAClBN,YAAa,wBACbC,YAAa,wBACbK,KAAM,uBAEM,CACZN,YAAa,iBACbC,YAAa,iBACbK,KAAM,mBAEE,CACRN,YAAa,YACbC,YAAa,YACbK,KAAM,qBAEI,CACVN,YAAa,cACbC,YAAa,cACbK,KAAM,qBAEI,CACVN,YAAa,cACbC,YAAa,cACbK,KAAM,WAGdC,QAAS,YACS,CACVP,YAAa,mCACbM,KAAM,OACNE,OAAQ,CAjFf,WAKA,YA6EOC,eAAgB,CAlFvB,YAmFOC,QAAS,CAtFlB,SACI,aACF,WACA,WACG,kBACE,gBACK,qBACN,8BAiFe,CACZV,YAAa,gBACbM,KAAM,UACNE,OAAQ,CAlFb,aACA,cAkFKC,eAAgB,CAnFrB,cAoFKC,QAAS,UAUjCC,UAAY,UAAUC,WAAEA,EAAFC,WAAcA,EAAdC,WAA0BA,EAA1BT,WAAsCA,WAChDO,OA5GE,SAoHd,SAAwBC,EAAoBC,EAA0BT,UAC1DQ,OArGO,cAoLnB,SAA6BC,EAA0BT,IA4BvD,SAAsBS,EAA0BT,EAA0BU,OAClEC,EAAWX,EAAU,SACrBY,EAAWZ,EAAU,YACC,iBAAbW,EAAwB,MAAM,IAAIE,MAAM,kDAEjDC,EAEAA,EADqB,iBAAbF,GAAuC,IAAZA,EACV,mDAAkBA,gBAAuBD,MAGzC,4DAA2BA,OA1G5D,SAAwBG,EAAaC,EAAcC,EAAqBN,OAChEO,EAAM,IAAIC,eACdD,EAAIE,mBAAqB,cACrBC,QAAQC,IAAI,8BAAgCJ,EAAIK,OAAS,IAAML,EAAIM,cAC5C,IAAnBN,EAAIO,cAEU,KAAdP,EAAIK,OAAe,KAEfG,EAAMC,KAAKC,MAAMV,EAAIM,cACP,mBAAPb,GACPA,EAAGe,QAEN,GAAkB,KAAdR,EAAIK,OACS,mBAAPZ,GACPA,EAAGO,EAAIM,mBAEV,GAAkB,KAAdN,EAAIK,OAAe,CACpBG,EAAMC,KAAKC,MAAMV,EAAIM,cAGP,mBAAPb,GACPA,EAAGe,QAEN,GAAkB,KAAdR,EAAIK,OACS,mBAAPZ,GACPA,EAAG,UAEN,CAAA,GAAkB,KAAdO,EAAIK,OAAe,CAEpBG,EAAMC,KAAKC,MAAMV,EAAIM,oBACnB,IAAIV,MAAMY,EAAIG,MAAMC,KAAO,KAAOJ,EAAIG,MAAME,SAEjD,GAAkB,KAAdb,EAAIK,OAcR,CACDS,WAAW,IAGPN,EAAMC,KAAKC,MAAMV,EAAIM,oBACnB,IAAIV,MAAMY,EAAIG,MAAMC,KAAO,KAAOJ,EAAIG,MAAME,YAfnB,gCAH3BL,EAAMC,KAAKC,MAAMV,EAAIM,eAEFK,MAAME,QACZE,iBAIP,IAAInB,MAAMY,EAAIG,MAAMC,KAAO,KAAOJ,EAAIG,MAAME,WAgB9DV,QAAQC,IAAI,oCAAsCP,GAClDG,EAAIgB,KAAKjB,EAAYkB,cAAepB,GAEpCG,EAAIkB,iBAAkB,EACtBlB,EAAImB,iBAAiB,SAAU,qBACE,OAA7BpB,EAAYkB,eAAuD,QAA7BlB,EAAYkB,eAAwD,SAA7BlB,EAAYkB,gBACzFjB,EAAImB,iBAAiB,eAAgB,oBAEzCnB,EAAIoB,KAAKtB,GA6CTuB,CAAexB,EAAK,KAAM,OAAO,SAAUS,GACrB,mBAAPb,GACPA,EAAGa,MA1CXgB,CAAa9B,EAAYT,GAAY,SAAUwC,OACvCC,EAAY,QACF,cACI,YACF,WACA,mBACG,mBACE,sBACK,gBACN,IAGhBD,EAAEE,MAAMC,OAAS,IACjBF,EAAS,OAAWD,EAAEE,MAAM,GAAGE,GAC/BH,EAAS,WAAeD,EAAEE,MAAM,GAAGG,OACnCJ,EAAS,SAAaD,EAAEE,MAAM,GAAGI,KACjCL,EAAS,SAAaD,EAAEE,MAAM,GAAGK,KACjCN,EAAS,gBAAgBO,KAAKrB,MAAMa,EAAEE,MAAM,GAAGO,iBAC/CR,EAAS,cAAkBD,EAAEE,MAAM,GAAGQ,UAAUC,KAAKxD,YACrD8C,EAAS,mBAAuBD,EAAEE,MAAM,GAAGQ,UAAUC,KAAKC,MAC1DX,EAAS,aAAiBD,EAAEE,MAAM,GAAGW,KAAKC,UAG9CvB,WAAWU,MArGPc,CAAoB9C,EAAYT,aAtGvB,eAoOb+B,WAAW,wBAzHI,IAAIlB,MAAM,cAAgBL,EAAa,wBAdlDgD,CAAehD,EAAYC,EAAYT,uBAE5B,IAAIa,MAAM,cAAgBN,EAAa"}